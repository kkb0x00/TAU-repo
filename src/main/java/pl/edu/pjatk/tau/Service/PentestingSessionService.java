package pl.edu.pjatk.tau.Service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import pl.edu.pjatk.tau.Domain.PentestingSession;
import pl.edu.pjatk.tau.Repository.PentestSessionRepository;

@Service
public class PentestingSessionService  {

    @Autowired
    private PentestSessionRepository repository;

    @Autowired
    private DBTimeService DBTimeService;

    public PentestingSession get(int id) {
        PentestingSession session = repository.findById(id).orElse(null);

        if(session != null) {
            DBTimeService.setlastReadTime(session);
        }

        return session;
    }

    public Iterable<PentestingSession> getAll() {
        Iterable<PentestingSession> sessions = repository.findAll();

        for (PentestingSession session: sessions) {
            DBTimeService.setlastReadTime(session);
        }

        return sessions;
    }

    public PentestingSession add(PentestingSession pentestingSession) {
        DBTimeService.setInsertTime(pentestingSession);
        repository.save(pentestingSession);

        return pentestingSession;
    }

    public PentestingSession update(int id, PentestingSession pentestingSession) {
        PentestingSession session = repository.findById(id).orElse(null);

        if(session != null) {
            DBTimeService.setlastUpdateTime(session);

            session.setTitle(pentestingSession.getTitle());
            session.setRiskType(pentestingSession.getRiskType());
            session.setTime(pentestingSession.getTime());
            session.setWeight(pentestingSession.getWeight());

            repository.save(pentestingSession);
        }

        return session;
    }

    public void delete(int id) {
        repository.findById(id).ifPresent(session -> repository.deleteById(id));
    }
}
